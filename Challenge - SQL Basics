/*In this SQL code, I'm querying a database that contains my favorite books to answer questions about the data. 

CREATE TABLE favbooks (id INTEGER, name TEXT, rating INTEGER, price INTEGER); 

INSERT INTO favbooks VALUES (1, "Elon Musk Biography", 8, 20);
INSERT INTO favbooks VALUES (2, "The Alchemist", 10, 15);
INSERT INTO favbooks VALUES (3, "The Lightning Theif", 9, 10);
INSERT INTO favbooks VALUES (3, "Catcher in the Rye", 8, 10);
INSERT INTO favbooks VALUES (3, "Rich Dad Poor Dad", 9, 10);


/*List all the book titles in alphabetical order. 
select name AS "book titles" 
FROM "favbooks"
ORDER BY name asc;

/*display the database ordered by rating
SELCT * FROM favbooks
ORDER BY rating desc;

/*what is the avg price of items? 
SELECT AVG(price) AS average_price
FROM favbooks
Where price > 15; 


/* In this SQL code, I'm retrieving movies that were released in the year 2000 or later, not before. Sort results so that the earlier movies are listed first.

CREATE TABLE movies (id INTEGER PRIMARY KEY, name TEXT, release_year INTEGER);
INSERT INTO movies VALUES (1, "Avatar", 2009);
INSERT INTO movies VALUES (2, "Titanic", 1997);
INSERT INTO movies VALUES (3, "Star Wars: Episode IV - A New Hope", 1977);
INSERT INTO movies VALUES (4, "Shrek 2", 2004);
INSERT INTO movies VALUES (5, "The Lion King", 1994);
INSERT INTO movies VALUES (6, "Disney's Up", 2009);
 
 
SELECT * FROM movies;
SELECT * FROM movies WHERE release_year > 2000 ORDER BY release_year


/* In this SQL code, I'm querying a database that's holding a TO DO list selecting the SUM of minutes it will take to complete all the items listed. 

CREATE TABLE todo_list (id INTEGER PRIMARY KEY, item TEXT, minutes INTEGER);
INSERT INTO todo_list VALUES (1, "Wash the dishes", 15);
INSERT INTO todo_list VALUES (2, "vacuuming", 20);
INSERT INTO todo_list VALUES (3, "Learn some stuff on KA", 30);
INSERT INTO todo_list VALUES (4, "Study", 30);

SELECT Sum(minutes) FROM todo_list
